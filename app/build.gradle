apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.sathish.weathervoicereco"
        minSdkVersion 20
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {

        debug {

            buildConfigField "boolean", "LOG", "true"
            buildConfigField "boolean", "RETROFIT_LOG_INTERCEPTOR", "true"
            //*Dev BASE URL
            buildConfigField "String", "BASE_URL", '"https://api.openweathermap.org/"'
            // Register Api key for open weather map
            buildConfigField "String", "API_KEY", '"a5253fb26676256143b9620889e279e3"'
            minifyEnabled false
            //debuggable true

            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        rc {
            // To display log and log interceptor
            buildConfigField "boolean", "LOG", "true"
            buildConfigField "boolean", "RETROFIT_LOG_INTERCEPTOR", "true"

            //Staging BASE URL
            buildConfigField "String", "BASE_URL", '"https://api.openweathermap.org/"'

            // Register Api key for open weather map
            buildConfigField "String", "API_KEY", '"a5253fb26676256143b9620889e279e3"'
            minifyEnabled false
            //debuggable true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }


        release {

            // To display log and log interceptor
            buildConfigField "boolean", "LOG", "true"
            buildConfigField "boolean", "RETROFIT_LOG_INTERCEPTOR", "true"
            // Production BASE URL
            buildConfigField "String", "BASE_URL", '"https://api.openweathermap.org/"'

            // Register Api key for open weather map
            buildConfigField "String", "API_KEY", '"a5253fb26676256143b9620889e279e3"'
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }


    packagingOptions {
        exclude 'LICENSE.txt'
    }
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.1.0'

    // TESTING
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    testImplementation 'org.mockito:mockito-core:2.19.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    // supporting Libraries
    implementation 'androidx.lifecycle:lifecycle-extensions:2.1.0'
    annotationProcessor 'androidx.lifecycle:lifecycle-compiler:2.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.squareup.retrofit2:retrofit:2.6.2'
    implementation 'com.squareup.retrofit2:converter-gson:2.6.2'
    implementation 'com.squareup.retrofit2:converter-jackson:2.6.2'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.2.2'

}
